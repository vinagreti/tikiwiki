{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","classCollapsed","classExpanded","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandChildCol","expandChildRow","expandCol","expandColsAt","expandRow","expandRowsAt","getTableEventHandlers","hasClass","main","processKeys","removeClass","replaceClass","setColVisibility","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","table","clickCallback","localeStrings","getRowKeys","getColKeys","element","className","regExp","RegExp","match","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","cellType","textContent","attributes","th","val","document","createElement","setAttribute","addEventListener","keysArr","c","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nHeaders","colspan","rowspan","colHeaderCols","onclick","window","target","getAttribute","colHeader","h","hh","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","td","totalAggregator","format","data-value","data-row","data-col","data-for","result","visibility","display","closest","find","css","not","colHeaderHeader","d","p","ref2","ch","gch","colSpan","rowHeaderHeader","rowSpan","scrollIntoView","idx","nAttrs","nCols","indexOf","nRows","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        classExpanded = \"expanded\" \r\n        classCollapsed = \"collapsed\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match regExp\r\n\r\n        removeClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            element.className += (\" \" + className) if not hasClass element, className\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName \r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createCell = (cellType, className, textContent, attributes, eventHandlers) ->\r\n            th = document.createElement cellType\r\n            th.className = className if className?\r\n            th.textContent = textContent if textContent?\r\n            th.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            th.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            headers = []\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            th = createCell \"th\", className, keysArr[0][0]\r\n            key = []\r\n            key.push keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\r\n                node: nodePos,\r\n                row: 0,\r\n                col: 0,\r\n                th: th,\r\n                parent: null,\r\n                children: [],\r\n                descendants: lastCol,\r\n                leaves: 1,\r\n                key: key,\r\n                flatKey: key.join String.fromCharCode(0)}\r\n            headers.push node\r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell \"th\", className, keysArr[0][c]\r\n                key = key.slice()\r\n                key.push keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\r\n                    node: nodePos,\r\n                    row: 0,\r\n                    col: c,\r\n                    th: th,\r\n                    parent: rMark[c-1],\r\n                    children: [],\r\n                    descendants: lastCol-c,\r\n                    leaves: 1,\r\n                    key: key,\r\n                    flatKey: key.join String.fromCharCode(0)}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push node\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                key = []\r\n                c = 0\r\n                while c <= lastCol\r\n                    key = key.slice()\r\n                    key.push keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell \"th\", className, keysArr[r][c]\r\n                    ++nodePos\r\n                    node = {\r\n                        node: nodePos,\r\n                        row: r,\r\n                        col: c,\r\n                        th: th,\r\n                        parent: null,\r\n                        children: [],\r\n                        descendants: 0,\r\n                        leaves: 1,\r\n                        key: key,\r\n                        flatKey: key.join String.fromCharCode(0)}\r\n                    if c is 0\r\n                        headers.push node\r\n                    else\r\n                        node.parent = rMark[c-1]\r\n                        rMark[c-1].children.push node\r\n                        x = 0\r\n                        while x <= c-1\r\n                            ++rMark[x].descendants\r\n                            ++x\r\n                    rMark[c] = node\r\n                    repeats = false\r\n                    ++c\r\n                ++rMark[c].leaves for c in [0..lastCol]\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            if col < colAttrs.length-1\r\n                className += \" expanded\"\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell \"th\", className, textContent\r\n            th.setAttribute \"data-colAttr\", colAttr\r\n            tr.appendChild th\r\n            colHeaderHeaders.push {\r\n                tr: tr,\r\n                th: th,\r\n                clickStatus: classExpanded,\r\n                expandedCount: 0,\r\n                nHeaders: 0}\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell \"th\", null, null, {\r\n                    colspan: rowAttrs.length,\r\n                    rowspan: colAttrs.length}\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            n = colAttrs.length-1\r\n            for i in [0..n] when i < n \r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute \"data-colAttr\"\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n            # Process\r\n            hh = colHeaderHeaders[colHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = hh.tr\r\n            th = colHeader.th\r\n            th.setAttribute \"data-colHeader\", th.textContent\r\n            th.setAttribute(\"rowspan\", 2) if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n            th.setAttribute(\"colspan\", colHeader.descendants+1) if colHeader.children.length !=0\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol colHeaderHeaders, colHeaderCols, parseInt event.target.getAttribute \"data-node\"\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                style = \"pvtColLabel col\" + colHeader.row\r\n                th = createCell \"th\", style, '', {\"rowspan\": rowspan}\r\n                colHeader.children[0].tr.appendChild th\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = classExpanded\r\n            colHeader.tr = tr\r\n            colHeaderCols.push colHeader\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell \"th\", className, textContent\r\n                th.setAttribute \"data-rowAttr\", rowAttr\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push {\r\n                    th: th,\r\n                    clickStatus: classExpanded,\r\n                    expandedCount: 0,\r\n                    nHeaders: 0}\r\n            if colAttrs.length != 0\r\n                th = createCell \"th\"\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            n = rowAttrs.length-1\r\n            for i in [0..n] when i < n \r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute \"data-rowAttr\"\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length == 0 then 0 else 1)\r\n            th = createCell \"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {rowspan: rowspan}\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            hh = rowHeaderHeaders.hh[rowHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = document.createElement \"tr\"\r\n            th = rowHeader.th\r\n            th.setAttribute \"rowspan\", rowHeader.descendants+1\r\n            th.setAttribute \"data-rowHeader\", th.textContent\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute \"colspan\", 2\r\n            th.setAttribute \"data-node\", rowHeaderRows.length\r\n            tr.appendChild th\r\n            if rowHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow rowHeaderHeaders, rowHeaderRows, parseInt event.target.getAttribute \"data-node\"\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell \"th\", \"pvtRowLabel pvtRowSubtotal\", '', {colspan: colspan}\r\n                tr.appendChild th\r\n            rowHeader.clickStatus = classExpanded\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push rowHeader\r\n            tbody.appendChild tr\r\n            for h in rowHeader.children\r\n                buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal\" if colHeader.children.length != 0\r\n                    style += \" pvtRowSubtotal\" if rowHeader.children.length != 0\r\n                    style += \" row\" + rowHeader.row +\r\n                        \" col\" + colHeader.row +\r\n                        \" rowcol\" + rowHeader.col +\r\n                        \" colcol\" + colHeader.col\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createCell \"td\", style, aggregator.format(val), {\"data-value\": val}, eventHandlers\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal\"\r\n                style += \" pvtRowSubtotal\" if rowHeader.children.length != 0\r\n                style += \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col\r\n                td = createCell \"td\", style, totalAggregator.format(val), {\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row\"+rowHeader.row,\r\n                    \"data-col\": \"col\"+rowHeader.col}, getTableEventHandlers val, rowHeader.key, []\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell \"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtVal pvtTotal colTotal\"\r\n                style += \" pvtColSubtotal\" if h.children.length != 0\r\n                style += \" col\" + h.row + \" colcol\" + h.col\r\n                td = createCell \"td\", style, totalAggregator.format(val),\r\n                    {\"data-value\": val, \"data-for\": \"col\" + h.col},\r\n                    getTableEventHandlers val, [], h.key\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        setColVisibility = (visibility, h) ->\r\n            h.th.style.display = visibility\r\n            if h.children.length != 0\r\n                $(h.th).closest 'table.pvtTable'\r\n                    .find 'tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col\r\n                    .css 'display', visibility\r\n            else\r\n                $(h.th)\r\n                    .closest 'table.pvtTable'\r\n                    .find 'tbody tr td.pvtVal.col' + h.row\r\n                    .not '.pvtColSubtotal'\r\n                    .css 'display', visibility\r\n            h.sTh.style.display = visibility if h.sTh\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.clickStatus is classCollapsed\r\n\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    setColVisibility \"none\", d\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute \"data-colHeader\"\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute \"colspan\", 1\r\n            h.th.style.display = \"\"\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2]\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute \"data-colAttr\"\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildCol = (ch) ->\r\n            setColVisibility \"\", ch if ch.th.style.display is \"none\"\r\n            expandChildCol gch for gch in ch.children if ch.clickStatus isnt classCollapsed\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.clickStatus is classExpanded\r\n\r\n            colspan = 0\r\n            for ch in h.children\r\n                colspan += ch.th.colSpan\r\n                setColVisibility \"\", ch if ch.th.style.display is \"none\"\r\n                expandChildCol ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-colHeader\"\r\n            h.th.setAttribute \"colspan\", colspan+1\r\n            h.clickStatus = classExpanded\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"colspan\", colspan + parseInt p.th.getAttribute \"colspan\"\r\n                p = p.parent\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount is hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-colAttr\"\r\n                hh.clickStatus = classExpanded\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]\r\n\r\n            h = rowHeaderRows[r]\r\n            return if h.clickStatus is classCollapsed\r\n\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"rowspan\", parseInt p.th.getAttribute(\"rowspan\")-rowspan\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute \"rowspan\", 1\r\n            h.tr.style.display = \"\"\r\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\r\n            rowHeaderHeader.expandedCount--\r\n            return if rowHeaderHeader.expandedCount != 0\r\n            for j in [h.col..rowHeaderHeaders.hh.length-2]\r\n                rowHeaderHeader = rowHeaderHeaders.hh[j]\r\n                replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                rowHeaderHeader.th.textContent =\r\n                    \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute \"data-rowAttr\"\r\n                rowHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildRow = (ch) ->\r\n            ch.tr.style.display = \"\" if ch.tr.style.display is \"none\"\r\n            expandChildRow gch for gch in ch.children if ch.clickStatus isnt classCollapsed\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]\r\n\r\n            h = rowHeaderRows[r]\r\n            return if h.clickStatus is classExpanded\r\n\r\n            rowspan = 0\r\n            for ch in h.children\r\n                rowspan += ch.th.rowSpan\r\n                ch.tr.style.display = \"\" if ch.tr.style.display is \"none\"\r\n                expandChildRow ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.setAttribute \"rowspan\", rowspan+1\r\n            h.clickStatus = classExpanded\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"rowspan\", rowspan + parseInt p.th.getAttribute \"rowspan\"\r\n                p = p.parent\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = classExpanded\r\n\r\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]?\r\n\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                expandCol(colHeaderHeaders, colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\r\n            h.th.scrollIntoView\r\n\r\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]?\r\n\r\n            if rowHeaderRows[r].clickStatus is classCollapsed\r\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\r\n\r\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf colAttr\r\n            else\r\n                idx = colAttr\r\n            return if idx < 0 or idx == colAttrs.length-1\r\n            i = idx\r\n            nAttrs = colAttrs.length-1\r\n            while i < nAttrs\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\r\n                hh.clickStatus = classCollapsed\r\n                ++i\r\n            i = 0\r\n            nCols = colHeaderCols.length\r\n            while i < nCols\r\n                h = colHeaderCols[i]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.th.style.display isnt \"none\"\r\n                    collapseCol colHeaderHeaders, colHeaderCols, parseInt h.th.getAttribute(\"data-node\")\r\n                ++i\r\n\r\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf colAttr\r\n            else\r\n                idx = colAttr\r\n            return if idx < 0 or idx == colAttrs.length-1\r\n            for i in [0..idx]\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nCols = colHeaderCols.length\r\n                while j < nCols\r\n                    h = colHeaderCols[j]\r\n                    expandCol colHeaderHeaders, colHeaderCols, j if h.col == i\r\n                    ++j\r\n            ++idx\r\n            while idx < colAttrs.length-1\r\n                colHeaderHeader = colHeaderHeaders[idx]\r\n                if colHeaderHeader.expandedCount == 0\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\r\n                    replaceClass colHeaderHeader.th, classCollapsed, classExpanded\r\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf rowAttr\r\n            else\r\n                idx = rowAttr\r\n\r\n            return if idx < 0 or idx == rowAttrs.length-1\r\n\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                h = rowHeaderHeaders.hh[i]\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                h.clickStatus = classCollapsed\r\n                ++i\r\n            j = 0\r\n            nRows = rowHeaderRows.length\r\n            while j < nRows\r\n                h = rowHeaderRows[j]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.tr.style.display isnt \"none\"\r\n                    collapseRow rowHeaderHeaders, rowHeaderRows, j\r\n                    j = j + h.descendants + 1\r\n                else\r\n                    ++j\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf rowAttr\r\n            else\r\n                idx = rowAttr\r\n\r\n            return if idx < 0 or idx == rowAttrs.length-1\r\n\r\n            for i in [0..idx]\r\n                hh = rowHeaderHeaders.hh[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                        j += h.descendants + 1\r\n                    else\r\n                        ++j\r\n            ++idx\r\n            while idx < rowAttrs.length-1\r\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\r\n                if rowHeaderHeader.expandedCount == 0\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\r\n                    replaceClass rowHeaderHeader.th, classCollapsed, classExpanded\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf colAttr\r\n            h = colHeaderHeaders[idx]\r\n            if h.clickStatus is classCollapsed\r\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n            else\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf rowAttr\r\n            th = rowHeaderHeaders.hh[idx]\r\n            if th.clickStatus is classCollapsed\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            rowHeaders = processKeys(rowKeys, \"pvtRowLabel\") if rowAttrs.length > 0 and rowKeys.length > 0\r\n            colHeaders = processKeys(colKeys, \"pvtColLabel\") if colAttrs.length > 0 and colKeys.length > 0\r\n\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            result.style.display = \"none\"\r\n\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length > 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs for h in colHeaders\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n\r\n            if rowAttrs.length > 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs) if colAttrs.length == 0\r\n\r\n            if colAttrs.length > 0\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs for h in rowHeaders if rowAttrs.length > 0\r\n            buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            buildColTotals(tr, colHeaderCols) if colAttrs.length > 0\r\n            buildGrandTotal(tbody, tr)\r\n\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            result.style.display = \"\" if not opts.collapseRowsAt? and not opts.collapseColsAt?\r\n            setTimeout (->\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\r\n                if not opts.collapseColsAt\r\n                    result.style.display = \"\"\r\n            ), 0 if opts.collapseRowsAt?\r\n            setTimeout (->\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\r\n                result.style.display = \"\"\r\n            ), 0 if opts.collapseColsAt?\r\n\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, getAggregator) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = getAggregator(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var addClass, allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, classCollapsed, classExpanded, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandChildCol, expandChildRow, expandCol, expandColsAt, expandRow, expandRowsAt, getTableEventHandlers, hasClass, main, processKeys, removeClass, replaceClass, rowAttrs, rowKeys, rowTotals, setColVisibility, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        table: {\n          clickCallback: null\n        },\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(true, {}, defaults, opts);\n      arrowCollapsed = opts.arrowCollapsed != null ? opts.arrowCollapsed : opts.arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = opts.arrowExpanded != null ? opts.arrowExpanded : opts.arrowExpanded = \"\\u25E2\";\n      classExpanded = \"expanded\";\n      classCollapsed = \"collapsed\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      hasClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className.match(regExp);\n      };\n      removeClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className = element.className.replace(regExp, '');\n      };\n      addClass = function(element, className) {\n        if (!hasClass(element, className)) {\n          return element.className += \" \" + className;\n        }\n      };\n      replaceClass = function(element, replaceClassName, byClassName) {\n        removeClass(element, replaceClassName);\n        return addClass(element, byClassName);\n      };\n      getTableEventHandlers = function(value, rowValues, colValues) {\n        var attr, event, eventHandlers, filters, handler, i, ref;\n        if (!opts.table && !opts.table.eventHandlers) {\n          return;\n        }\n        eventHandlers = {};\n        ref = opts.table.eventHandlers;\n        for (event in ref) {\n          if (!hasProp.call(ref, event)) continue;\n          handler = ref[event];\n          filters = {};\n          for (i in colAttrs) {\n            if (!hasProp.call(colAttrs, i)) continue;\n            attr = colAttrs[i];\n            if (colValues[i] != null) {\n              filters[attr] = colValues[i];\n            }\n          }\n          for (i in rowAttrs) {\n            if (!hasProp.call(rowAttrs, i)) continue;\n            attr = rowAttrs[i];\n            if (rowValues[i] != null) {\n              filters[attr] = rowValues[i];\n            }\n          }\n          eventHandlers[event] = function(e) {\n            return handler(e, value, filters, pivotData);\n          };\n        }\n        return eventHandlers;\n      };\n      createCell = function(cellType, className, textContent, attributes, eventHandlers) {\n        var attr, event, handler, th, val;\n        th = document.createElement(cellType);\n        if (className != null) {\n          th.className = className;\n        }\n        if (textContent != null) {\n          th.textContent = textContent;\n        }\n        if (attributes != null) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        if (eventHandlers != null) {\n          for (event in eventHandlers) {\n            if (!hasProp.call(eventHandlers, event)) continue;\n            handler = eventHandlers[event];\n            th.addEventListener(event, handler);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, headers, k, key, lastCol, lastRow, node, nodePos, r, rMark, ref, repeats, th, x;\n        headers = [];\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        key = [];\n        key.push(keysArr[0][0]);\n        nodePos = 0;\n        node = {\n          node: nodePos,\n          row: 0,\n          col: 0,\n          th: th,\n          parent: null,\n          children: [],\n          descendants: lastCol,\n          leaves: 1,\n          key: key,\n          flatKey: key.join(String.fromCharCode(0))\n        };\n        headers.push(node);\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          key = key.slice();\n          key.push(keysArr[0][c]);\n          ++nodePos;\n          node = {\n            node: nodePos,\n            row: 0,\n            col: c,\n            th: th,\n            parent: rMark[c - 1],\n            children: [],\n            descendants: lastCol - c,\n            leaves: 1,\n            key: key,\n            flatKey: key.join(String.fromCharCode(0))\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          key = [];\n          c = 0;\n          while (c <= lastCol) {\n            key = key.slice();\n            key.push(keysArr[r][c]);\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            node = {\n              node: nodePos,\n              row: r,\n              col: c,\n              th: th,\n              parent: null,\n              children: [],\n              descendants: 0,\n              leaves: 1,\n              key: key,\n              flatKey: key.join(String.fromCharCode(0))\n            };\n            if (c === 0) {\n              headers.push(node);\n            } else {\n              node.parent = rMark[c - 1];\n              rMark[c - 1].children.push(node);\n              x = 0;\n              while (x <= c - 1) {\n                ++rMark[x].descendants;\n                ++x;\n              }\n            }\n            rMark[c] = node;\n            repeats = false;\n            ++c;\n          }\n          for (c = k = 0, ref = lastCol; 0 <= ref ? k <= ref : k >= ref; c = 0 <= ref ? ++k : --k) {\n            ++rMark[c].leaves;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var className, colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        textContent = colAttr;\n        className = \"pvtAxisLabel\";\n        if (col < colAttrs.length - 1) {\n          className += \" expanded\";\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", className, textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          tr: tr,\n          th: th,\n          clickStatus: classExpanded,\n          expandedCount: 0,\n          nHeaders: 0\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            colspan: rowAttrs.length,\n            rowspan: colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, n, ref, results, th;\n        n = colAttrs.length - 1;\n        results = [];\n        for (i = k = 0, ref = n; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < n)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, hh, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        hh = colHeaderHeaders[colHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = hh.tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = classExpanded;\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var className, i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.hh = [];\n        for (i in rowAttrs) {\n          if (!hasProp.call(rowAttrs, i)) continue;\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          className = \"pvtAxisLabel\";\n          if (i < rowAttrs.length - 1) {\n            className += \" expanded\";\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", className, textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.hh.push({\n            th: th,\n            clickStatus: classExpanded,\n            expandedCount: 0,\n            nHeaders: 0\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, n, ref, results, rowAttr, th;\n        n = rowAttrs.length - 1;\n        results = [];\n        for (i = k = 0, ref = n; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < n)) {\n            continue;\n          }\n          th = rowHeaderHeaders.hh[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          rowspan: rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, hh, k, len, ref, results, th, tr;\n        hh = rowHeaderHeaders.hh[rowHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel pvtRowSubtotal\", '', {\n            colspan: colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = classExpanded;\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, eventHandlers, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            if (colHeader.children.length !== 0) {\n              style += \" pvtColSubtotal\";\n            }\n            if (rowHeader.children.length !== 0) {\n              style += \" pvtRowSubtotal\";\n            }\n            style += \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            eventHandlers = getTableEventHandlers(val, rowHeader.key, colHeader.key);\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            }, eventHandlers);\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          style = \"pvtTotal rowTotal\";\n          if (rowHeader.children.length !== 0) {\n            style += \" pvtRowSubtotal\";\n          }\n          style += \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          }, getTableEventHandlers(val, rowHeader.key, []));\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          colspan: colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          if (h.children.length !== 0) {\n            style += \" pvtColSubtotal\";\n          }\n          style += \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          }, getTableEventHandlers(val, [], h.key));\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        }, getTableEventHandlers(val, [], []));\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      setColVisibility = function(visibility, h) {\n        h.th.style.display = visibility;\n        if (h.children.length !== 0) {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility);\n        } else {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility);\n        }\n        if (h.sTh) {\n          return h.sTh.style.display = visibility;\n        }\n      };\n      collapseCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var colHeaderHeader, colspan, d, h, i, k, l, p, ref, ref1, ref2, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            setColVisibility(\"none\", d);\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"colspan\", 1);\n        h.th.style.display = \"\";\n        colHeaderHeader = colHeaderHeaders[h.col];\n        colHeaderHeader.expandedCount--;\n        if (colHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (i = l = ref1 = h.col, ref2 = colHeaderHeaders.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; i = ref1 <= ref2 ? ++l : --l) {\n            colHeaderHeader = colHeaderHeaders[i];\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\");\n            results.push(colHeaderHeader.clickStatus = classCollapsed);\n          }\n          return results;\n        }\n      };\n      expandChildCol = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.th.style.display === \"none\") {\n          setColVisibility(\"\", ch);\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildCol(gch));\n          }\n          return results;\n        }\n      };\n      expandCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var ch, colspan, h, hh, k, len, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        colspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          colspan += ch.th.colSpan;\n          if (ch.th.style.display === \"none\") {\n            setColVisibility(\"\", ch);\n          }\n          expandChildCol(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.th.setAttribute(\"colspan\", colspan + 1);\n        h.clickStatus = classExpanded;\n        h.th.style.display = \"\";\n        if (h.sTh != null) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          p = p.parent;\n        }\n        hh = colHeaderHeaders[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      collapseRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var d, h, i, j, k, l, p, ref, ref1, ref2, results, rowHeaderHeader, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\") - rowspan));\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"rowspan\", 1);\n        h.tr.style.display = \"\";\n        rowHeaderHeader = rowHeaderHeaders.hh[h.col];\n        rowHeaderHeader.expandedCount--;\n        if (rowHeaderHeader.expandedCount !== 0) {\n          return;\n        }\n        results = [];\n        for (j = l = ref1 = h.col, ref2 = rowHeaderHeaders.hh.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; j = ref1 <= ref2 ? ++l : --l) {\n          rowHeaderHeader = rowHeaderHeaders.hh[j];\n          replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n          rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\");\n          results.push(rowHeaderHeader.clickStatus = classCollapsed);\n        }\n        return results;\n      };\n      expandChildRow = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.tr.style.display === \"none\") {\n          ch.tr.style.display = \"\";\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildRow(gch));\n          }\n          return results;\n        }\n      };\n      expandRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var ch, h, hh, k, len, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        rowspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          rowspan += ch.th.rowSpan;\n          if (ch.tr.style.display === \"none\") {\n            ch.tr.style.display = \"\";\n          }\n          expandChildRow(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.th.setAttribute(\"rowspan\", rowspan + 1);\n        h.clickStatus = classExpanded;\n        h.tr.style.display = \"\";\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          p = p.parent;\n        }\n        hh = rowHeaderHeaders.hh[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      toggleCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var h;\n        if (colHeaderCols[c] == null) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          expandCol(colHeaderHeaders, colHeaderCols, c);\n        } else {\n          collapseCol(colHeaderHeaders, colHeaderCols, c);\n        }\n        return h.th.scrollIntoView;\n      };\n      toggleRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        if (rowHeaderRows[r] == null) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === classCollapsed) {\n          return expandRow(rowHeaderHeaders, rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderHeaders, rowHeaderRows, r);\n        }\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, hh, i, idx, nAttrs, nCols, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classExpanded, classCollapsed);\n          hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          hh.clickStatus = classCollapsed;\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.th.style.display !== \"none\") {\n            collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")));\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var colHeaderHeader, h, hh, i, idx, j, k, nCols, ref, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nCols = colHeaderCols.length;\n          while (j < nCols) {\n            h = colHeaderCols[j];\n            if (h.col === i) {\n              expandCol(colHeaderHeaders, colHeaderCols, j);\n            }\n            ++j;\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < colAttrs.length - 1) {\n          colHeaderHeader = colHeaderHeaders[idx];\n          if (colHeaderHeader.expandedCount === 0) {\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classCollapsed;\n          } else if (colHeaderHeader.expandedCount === colHeaderHeader.nHeaders) {\n            replaceClass(colHeaderHeader.th, classCollapsed, classExpanded);\n            colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, nAttrs, nRows, results;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          h = rowHeaderHeaders.hh[i];\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          h.clickStatus = classCollapsed;\n          ++i;\n        }\n        j = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (j < nRows) {\n          h = rowHeaderRows[j];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.tr.style.display !== \"none\") {\n            collapseRow(rowHeaderHeaders, rowHeaderRows, j);\n            results.push(j = j + h.descendants + 1);\n          } else {\n            results.push(++j);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, hh, i, idx, j, k, nRows, ref, results, rowHeaderHeader;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = rowHeaderHeaders.hh[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nRows = rowHeaderRows.length;\n          while (j < nRows) {\n            h = rowHeaderRows[j];\n            if (h.col === i) {\n              expandRow(rowHeaderHeaders, rowHeaderRows, j);\n              j += h.descendants + 1;\n            } else {\n              ++j;\n            }\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < rowAttrs.length - 1) {\n          rowHeaderHeader = rowHeaderHeaders.hh[idx];\n          if (rowHeaderHeader.expandedCount === 0) {\n            replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classCollapsed;\n          } else if (rowHeaderHeader.expandedCount === rowHeaderHeader.nHeaders) {\n            replaceClass(rowHeaderHeader.th, classCollapsed, classExpanded);\n            rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, idx;\n        idx = colAttrs.indexOf(colAttr);\n        h = colHeaderHeaders[idx];\n        if (h.clickStatus === classCollapsed) {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.hh[idx];\n        if (th.clickStatus === classCollapsed) {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length > 0 && rowKeys.length > 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length > 0 && colKeys.length > 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length > 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length > 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length > 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length > 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n        }\n        buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length > 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if ((opts.collapseRowsAt == null) && (opts.collapseColsAt == null)) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt != null) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt != null) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts);\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts);\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts);\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}